{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/application.service.ts","webpack:///./src/app/application/application.component.css","webpack:///./src/app/application/application.component.html","webpack:///./src/app/application/application.component.ts","webpack:///./src/app/credentials.ts","webpack:///./src/app/login.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ApplicationComponent } from './application/application.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'application', component: ApplicationComponent}\n];\n\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <img width=\\\"300\\\" alt=\\\"Revature Logo\\\" src=\\\"../assets/images/revature-logo2.png\\\">\\n  <h1>\\n    Welcome to the {{ title }}!\\n  </h1>\\n  <br>\\n  <h5> Please log in or register to continue!</h5>\\n  <nav>\\n      <a routerLink=\\\"/login\\\">login</a>\\n      <a routerLink=\\\"/application\\\">application</a>\\n    </nav>\\n</div>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Revature Employee Vessel';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ApplicationComponent } from './application/application.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MessagesComponent,\n    ApplicationComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { User } from './user';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { MessageService } from './message.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApplicationService {\n\n  url = 'http://localhost:8080/REVjava/application';\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /** POST: send credentials to server */\n  postUser(user: User): Observable<User> {\n    return this.http.post<User>(this.url, user, httpOptions);\n  }\n}\n","module.exports = \".application {\\r\\n    background-color: rgb(41, 100, 168);\\r\\n    border-style: ridge;\\r\\n    border-width: 1rem;\\r\\n    padding: .5rem;\\r\\n    border-color: gray;\\r\\n    margin: 0 auto;\\r\\n}\"","module.exports = \"<form style=\\\"text-align:center\\\">\\n  <div class=\\\"application\\\" id=\\\"app\\\" style=\\\"width: 45rem\\\" >\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-6 col-med\\\">\\n        First Name:\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"first\\\" name=\\\"first\\\" required autofocus>\\n      </div>\\n      <div class=\\\"col-6 col-med\\\">\\n        Last Name:\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"last\\\" name=\\\"last\\\" required autofocus>\\n      </div>\\n    </div><br>\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-6 col-med\\\">\\n        Email:\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required autofocus>\\n      </div>\\n      <div class=\\\"col-6 col-med\\\">\\n        Password:\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"pass\\\" name=\\\"pass\\\" required autofocus>\\n      </div>\\n    </div><br>\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-6 col-med\\\">\\n        City:\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\" required autofocus>\\n      </div>\\n      <div class=\\\"col-6 col-med\\\">\\n        State:\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"state\\\" name=\\\"state\\\" required autofocus>\\n      </div>\\n    </div><br>\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4 col-sm\\\">\\n        Client Company:\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"client\\\" name=\\\"client\\\" required autofocus>\\n      </div>\\n      <div class=\\\"col-4 col-sm\\\">\\n        Batch Id:\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"batch\\\" name=\\\"batch\\\" required autofocus>\\n      </div>\\n      <div class=\\\"col-4 col-sm\\\">\\n        Position:\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"position\\\" name=\\\"position\\\" required autofocus>\\n      </div>\\n    </div><br>\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-lg\\\"><br>\\n        <input type=\\\"submit\\\" (click)=\\\"postApplication()\\\" name=\\\"application\\\">\\n      </div>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { ApplicationService } from '../application.service';\nimport { Observable } from 'rxjs';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n\n  first: '';\n  last: '';\n  email: '';\n  pass: '';\n  city: '';\n  state: '';\n  client: '';\n  batch: 0;\n  position: '';\n  user: User;\n\n  constructor(private applicationService: ApplicationService) {}\n\n  ngOnInit() {\n  }\n\n  postApplication(): void {\n    console.log(this.first + ' ' + this.last);\n    const u = new User(this.first, this.last, this.email, this.pass, this.city, this.state, this.client,\n      this.batch, this.position);\n\n    console.log(u);\n\n    this.applicationService.postUser(u).subscribe();\n    /*if (!this.c) { return; } */\n   }\n}\n","export class Credentials {\r\n    email: string;\r\n    pass: string;\r\n\r\n\r\n    constructor(email: string, pass: string) {\r\n        this.email = email,\r\n        this.pass = pass;\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Credentials } from './credentials';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { MessageService } from './message.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  url = 'http://localhost:8080/REVjava/login';\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /** POST: send credentials to server */\n  postLogin(credentials: Credentials): Observable<Credentials> {\n    return this.http.post<Credentials>(this.url, credentials, httpOptions);\n  }\n\n\n}\n","module.exports = \".credentials {\\r\\n    background-color: rgb(41, 100, 168);\\r\\n    border-style: ridge;\\r\\n    border-width: 1rem;\\r\\n    padding: .5rem;\\r\\n    border-color: gray;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\" integrity=\\\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\\\"\\n  crossorigin=\\\"anonymous\\\">\\n\\n<form style=\\\"text-align:center\\\">\\n  <div class=\\\"credentials\\\" id=\\\"login\\\" style=\\\"width: 20rem\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-med\\\">\\n        Email:<br>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required autofocus><br>\\n      </div>\\n    </div>\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-med\\\">\\n        Password:<br>\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"pass\\\" name=\\\"pass\\\" required autofocus><br>\\n      </div>\\n    </div>\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-med\\\"><br>\\n        <input type=\\\"submit\\\" (click)=\\\"postCredentials()\\\" name=\\\"cred\\\">\\n      </div>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { Observable } from 'rxjs';\nimport { Credentials } from '../credentials';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  email: '';\n  pass: '';\n  credentials: Credentials;\n\n  constructor(private loginService: LoginService) {}\n\n  ngOnInit() {\n  }\n\n  postCredentials(): void {\n    console.log(this.email + ' ' + this.pass);\n    const c = new Credentials(this.email, this.pass);\n\n    console.log(c);\n\n    this.loginService.postLogin(c).subscribe();\n    /*if (!this.c) { return; } */\n   }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n\n}\n","module.exports = \"/* MessagesComponent's private CSS styles */\\r\\nh2 {\\r\\n    color: red;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    font-weight: lighter;\\r\\n  }\\r\\nbody {\\r\\n    margin: 2em;\\r\\n  }\\r\\nbody, input[text], button {\\r\\n    color: crimson;\\r\\n    font-family: Cambria, Georgia;\\r\\n  }\\r\\nbutton.clear {\\r\\n    font-family: Arial;\\r\\n    background-color: #eee;\\r\\n    border: none;\\r\\n    padding: 5px 10px;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n    cursor: hand;\\r\\n  }\\r\\nbutton:hover {\\r\\n    background-color: #cfd8dc;\\r\\n  }\\r\\nbutton:disabled {\\r\\n    background-color: #eee;\\r\\n    color: #aaa;\\r\\n    cursor: auto;\\r\\n  }\\r\\nbutton.clear {\\r\\n    color: #888;\\r\\n    margin-bottom: 12px;\\r\\n  }\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n  <h2>Messages</h2>\\n  <button class=\\\"clear\\\"\\n    (click)=\\\"messageService.clear()\\\">clear</button>\\n  <div *ngFor='let message of messageService.messages'> {{message}}</div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageSeervice: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","export class User {\r\n\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n    city: string;\r\n    state: string;\r\n    clientCompany: string;\r\n    batchId: number;\r\n    position: string;\r\n\r\n    constructor(first: string, last: string, email: string, pass: string, city: string, state: string,\r\n         client: string, batch: number, pos: string) {\r\n             this.firstName = first;\r\n             this.lastName = last;\r\n             this.email = email;\r\n             this.password = pass;\r\n             this.city = city;\r\n             this.state = state;\r\n             this.clientCompany = client;\r\n             this.batchId = batch;\r\n             this.position = pos;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}